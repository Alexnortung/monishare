create table "public"."group_members" (
    "group_id" bigint not null,
    "user_id" uuid not null,
    "is_owner" boolean not null default false
);
alter table "public"."group_members" enable row level security;
create table "public"."groups" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now()
);
alter table "public"."groups" enable row level security;
create table "public"."posts" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "message" text,
    "amount" bigint,
    "created_by" uuid
);
alter table "public"."posts" enable row level security;
create table "public"."posts_debitors" (
    "post_id" bigint not null,
    "user_id" uuid not null,
    "amount" bigint not null default '1'::bigint,
    "fixed" boolean not null
);
alter table "public"."posts_debitors" enable row level security;
create table "public"."posts_expositors" (
    "post_id" bigint not null,
    "user_id" uuid not null,
    "amount" bigint not null default '1'::bigint,
    "fixed" boolean not null default false
);
alter table "public"."posts_expositors" enable row level security;
create table "public"."profiles" (
    "id" uuid not null,
    "created_at" timestamp with time zone default now()
);
alter table "public"."profiles" enable row level security;
CREATE UNIQUE INDEX group_members_pkey ON public.group_members USING btree (group_id, user_id);
CREATE UNIQUE INDEX groups_pkey ON public.groups USING btree (id);
CREATE UNIQUE INDEX posts_debitors_pkey ON public.posts_debitors USING btree (post_id, user_id);
CREATE UNIQUE INDEX posts_expositors_pkey ON public.posts_expositors USING btree (post_id, user_id);
CREATE UNIQUE INDEX posts_pkey ON public.posts USING btree (id);
CREATE UNIQUE INDEX profile_pkey ON public.profiles USING btree (id);
alter table "public"."group_members" add constraint "group_members_pkey" PRIMARY KEY using index "group_members_pkey";
alter table "public"."groups" add constraint "groups_pkey" PRIMARY KEY using index "groups_pkey";
alter table "public"."posts" add constraint "posts_pkey" PRIMARY KEY using index "posts_pkey";
alter table "public"."posts_debitors" add constraint "posts_debitors_pkey" PRIMARY KEY using index "posts_debitors_pkey";
alter table "public"."posts_expositors" add constraint "posts_expositors_pkey" PRIMARY KEY using index "posts_expositors_pkey";
alter table "public"."profiles" add constraint "profile_pkey" PRIMARY KEY using index "profile_pkey";
alter table "public"."group_members" add constraint "group_members_group_id_fkey" FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE not valid;
alter table "public"."group_members" validate constraint "group_members_group_id_fkey";
alter table "public"."group_members" add constraint "group_members_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE CASCADE not valid;
alter table "public"."group_members" validate constraint "group_members_user_id_fkey";
alter table "public"."posts" add constraint "posts_created_by_fkey" FOREIGN KEY (created_by) REFERENCES profiles(id) ON DELETE SET NULL not valid;
alter table "public"."posts" validate constraint "posts_created_by_fkey";
alter table "public"."posts_debitors" add constraint "posts_debitors_post_id_fkey" FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE not valid;
alter table "public"."posts_debitors" validate constraint "posts_debitors_post_id_fkey";
alter table "public"."posts_debitors" add constraint "posts_debitors_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE SET NULL not valid;
alter table "public"."posts_debitors" validate constraint "posts_debitors_user_id_fkey";
alter table "public"."posts_expositors" add constraint "posts_expositors_post_id_fkey" FOREIGN KEY (post_id) REFERENCES posts(id) ON DELETE CASCADE not valid;
alter table "public"."posts_expositors" validate constraint "posts_expositors_post_id_fkey";
alter table "public"."posts_expositors" add constraint "posts_expositors_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON DELETE SET NULL not valid;
alter table "public"."posts_expositors" validate constraint "posts_expositors_user_id_fkey";
alter table "public"."profiles" add constraint "profiles_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;
alter table "public"."profiles" validate constraint "profiles_id_fkey";
